/**
 * \file
 * \brief Generated by ifgen (3.0.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace RP2040
{

enum class PIO_SM2_EXECCTRL_STATUS_SEL : uint8_t
{
    TXLEVEL /*!< All-ones if TX FIFO level < N, otherwise all-zeroes */,
    RXLEVEL = 1 /*!< All-ones if RX FIFO level < N, otherwise all-zeroes */
};
static_assert(sizeof(PIO_SM2_EXECCTRL_STATUS_SEL) == 1);

static constexpr uint16_t PIO_SM2_EXECCTRL_STATUS_SEL_id = 366;

/**
 * Converts PIO_SM2_EXECCTRL_STATUS_SEL to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(PIO_SM2_EXECCTRL_STATUS_SEL instance)
{
    const char *result = "UNKNOWN PIO_SM2_EXECCTRL_STATUS_SEL";

    switch (instance)
    {
    case PIO_SM2_EXECCTRL_STATUS_SEL::TXLEVEL:
        result = "TXLEVEL";
        break;
    case PIO_SM2_EXECCTRL_STATUS_SEL::RXLEVEL:
        result = "RXLEVEL";
        break;
    }

    return result;
}

/**
 * Converts a C string to PIO_SM2_EXECCTRL_STATUS_SEL.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, PIO_SM2_EXECCTRL_STATUS_SEL &output)
{
    bool result = false;

    if ((result = !strncmp(data, "TXLEVEL", 7)))
    {
        output = PIO_SM2_EXECCTRL_STATUS_SEL::TXLEVEL;
    }
    else if ((result = !strncmp(data, "RXLEVEL", 7)))
    {
        output = PIO_SM2_EXECCTRL_STATUS_SEL::RXLEVEL;
    }

    return result;
}

}; // namespace RP2040
