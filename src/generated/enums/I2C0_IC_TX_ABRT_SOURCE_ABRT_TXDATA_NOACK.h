/**
 * \file
 * \brief Generated by ifgen (3.0.1).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace RP2040
{

enum class I2C0_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK : uint8_t
{
    ABRT_TXDATA_NOACK_VOID /*!< Transmitted data non-ACKed by addressed
                              slave-scenario not present */
        ,
    ABRT_TXDATA_NOACK_GENERATED =
        1 /*!< Transmitted data not ACKed by addressed slave */
};
static_assert(sizeof(I2C0_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK) == 1);

static constexpr uint16_t I2C0_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK_id = 123;

/**
 * Converts I2C0_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(I2C0_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK instance)
{
    const char *result = "UNKNOWN I2C0_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK";

    switch (instance)
    {
    case I2C0_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK::ABRT_TXDATA_NOACK_VOID:
        result = "ABRT_TXDATA_NOACK_VOID";
        break;
    case I2C0_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK::ABRT_TXDATA_NOACK_GENERATED:
        result = "ABRT_TXDATA_NOACK_GENERATED";
        break;
    }

    return result;
}

/**
 * Converts a C string to I2C0_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        I2C0_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK &output)
{
    bool result = false;

    if ((result = !strncmp(data, "ABRT_TXDATA_NOACK_VOID", 22)))
    {
        output =
            I2C0_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK::ABRT_TXDATA_NOACK_VOID;
    }
    else if ((result = !strncmp(data, "ABRT_TXDATA_NOACK_GENERATED", 27)))
    {
        output = I2C0_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK::
            ABRT_TXDATA_NOACK_GENERATED;
    }

    return result;
}

}; // namespace RP2040
