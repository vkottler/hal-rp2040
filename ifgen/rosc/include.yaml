---
structs:
  rosc:
    instances:
      - name: ROSC
        address: '0x40060000'
    fields:
      - name: CTRL
        type: uint32_t
        expected_size: 4
        expected_offset: 0
        description: (read-write) Ring Oscillator control
        fields:
          - name: FREQ_RANGE
            description: "Controls the number of delay stages in the ROSC ring\\n\n\
              \                LOW uses stages 0 to 7\\n\n                MEDIUM uses
              stages 0 to 5\\n\n                HIGH uses stages 0 to 3\\n\n     \
              \           TOOHIGH uses stages 0 to 1 and should not be used because
              its frequency exceeds design specifications\\n\n                The
              clock output will not glitch when changing the range up one step at
              a time\\n\n                The clock output will glitch when changing
              the range down\\n\n                Note: the values here are gray coded
              which is why HIGH comes before TOOHIGH"
            index: 0
            width: 12
            read: true
            write: true
            type: ROSC_CTRL_FREQ_RANGE
          - name: ENABLE
            description: "On power-up this field is initialised to ENABLE\\n\n   \
              \             The system clock must be switched to another source before
              setting this field to DISABLE otherwise the chip will lock up\\n\n \
              \               The 12-bit code is intended to give some protection
              against accidental writes. An invalid setting will enable the oscillator."
            index: 12
            width: 12
            read: true
            write: true
            type: ROSC_CTRL_ENABLE
      - name: FREQA
        type: uint32_t
        expected_size: 4
        expected_offset: 4
        description: "(read-write) The FREQA & FREQB registers control the frequency
          by controlling the drive strength of each stage\\n\n            The drive
          strength has 4 levels determined by the number of bits set\\n\n        \
          \    Increasing the number of bits set increases the drive strength and
          increases the oscillation frequency\\n\n            0 bits set is the default
          drive strength\\n\n            1 bit set doubles the drive strength\\n\n\
          \            2 bits set triples drive strength\\n\n            3 bits set
          quadruples drive strength"
        fields:
          - name: DS0
            description: Stage 0 drive strength
            index: 0
            width: 3
            read: true
            write: true
          - name: DS1
            description: Stage 1 drive strength
            index: 4
            width: 3
            read: true
            write: true
          - name: DS2
            description: Stage 2 drive strength
            index: 8
            width: 3
            read: true
            write: true
          - name: DS3
            description: Stage 3 drive strength
            index: 12
            width: 3
            read: true
            write: true
          - name: PASSWD
            description: "Set to 0x9696 to apply the settings\\n\n               \
              \ Any other value in this field will set all drive strengths to 0"
            index: 16
            width: 16
            read: true
            write: true
            type: ROSC_FREQA_PASSWD
      - name: FREQB
        type: uint32_t
        expected_size: 4
        expected_offset: 8
        description: (read-write) For a detailed description see freqa register
        fields:
          - name: DS4
            description: Stage 4 drive strength
            index: 0
            width: 3
            read: true
            write: true
          - name: DS5
            description: Stage 5 drive strength
            index: 4
            width: 3
            read: true
            write: true
          - name: DS6
            description: Stage 6 drive strength
            index: 8
            width: 3
            read: true
            write: true
          - name: DS7
            description: Stage 7 drive strength
            index: 12
            width: 3
            read: true
            write: true
          - name: PASSWD
            description: "Set to 0x9696 to apply the settings\\n\n               \
              \ Any other value in this field will set all drive strengths to 0"
            index: 16
            width: 16
            read: true
            write: true
            type: ROSC_FREQB_PASSWD
      - name: DORMANT
        type: uint32_t
        expected_size: 4
        expected_offset: 12
        description: "(read-write) Ring Oscillator pause control\\n\n            This
          is used to save power by pausing the ROSC\\n\n            On power-up this
          field is initialised to WAKE\\n\n            An invalid write will also
          select WAKE\\n\n            Warning: setup the irq before selecting dormant
          mode"
      - name: DIV
        type: uint32_t
        expected_size: 4
        expected_offset: 16
        description: (read-write) Controls the output divider
        fields:
          - name: DIV
            description: "set to 0xaa0 + div where\\n\n                div = 0 divides
              by 32\\n\n                div = 1-31 divides by div\\n\n           \
              \     any other value sets div=31\\n\n                this register
              resets to div=16"
            index: 0
            width: 12
            read: true
            write: true
            type: ROSC_DIV_DIV
      - name: PHASE
        type: uint32_t
        expected_size: 4
        expected_offset: 20
        description: (read-write) Controls the phase shifted output
        fields:
          - name: SHIFT
            description: "phase shift the phase-shifted output by SHIFT input clocks\\\
              n\n                this can be changed on-the-fly\\n\n             \
              \   must be set to 0 before setting div=1"
            index: 0
            width: 2
            read: true
            write: true
          - name: FLIP
            description: "invert the phase-shifted output\\n\n                this
              is ignored when div=1"
            index: 2
            width: 1
            read: true
            write: true
          - name: ENABLE
            description: "enable the phase-shifted output\\n\n                this
              can be changed on-the-fly"
            index: 3
            width: 1
            read: true
            write: true
          - name: PASSWD
            description: "set to 0xaa\\n\n                any other value enables
              the output with shift=0"
            index: 4
            width: 8
            read: true
            write: true
      - name: STATUS
        type: uint32_t
        expected_size: 4
        expected_offset: 24
        description: (read-write) Ring Oscillator Status
        fields:
          - name: ENABLED
            description: "Oscillator is enabled but not necessarily running and stable\\\
              n\n                this resets to 0 but transitions to 1 during chip
              startup"
            index: 12
            width: 1
            read: true
            write: false
          - name: DIV_RUNNING
            description: "post-divider is running\\n\n                this resets
              to 0 but transitions to 1 during chip startup"
            index: 16
            width: 1
            read: true
            write: false
          - name: BADWRITE
            description: An invalid value has been written to CTRL_ENABLE or CTRL_FREQ_RANGE
              or FREQA or FREQB or DIV or PHASE or DORMANT
            index: 24
            width: 1
            read: true
            write: true
          - name: STABLE
            description: Oscillator is running and stable
            index: 31
            width: 1
            read: true
            write: false
      - name: RANDOMBIT
        type: uint32_t
        expected_size: 4
        expected_offset: 28
        const: true
        description: (read-only) This just reads the state of the oscillator output
          so randomness is compromised if the ring oscillator is stopped or run at
          a harmonic of the bus frequency
        fields:
          - name: RANDOMBIT
            index: 0
            width: 1
            read: true
            write: false
      - name: COUNT
        type: uint32_t
        expected_size: 4
        expected_offset: 32
        description: "(read-write) A down counter running at the ROSC frequency which
          counts to zero and stops.\\n\n            To start the counter write a non-zero
          value.\\n\n            Can be used for short software pauses when setting
          up time sensitive hardware."
        fields:
          - name: COUNT
            index: 0
            width: 8
            read: true
            write: true
    stream: false
    codec: false
    methods: false
    unit_test: false
    identifier: false
enums:
  ROSC_CTRL_FREQ_RANGE:
    enum:
      LOW:
        value: 4004
      MEDIUM:
        value: 4005
      HIGH:
        value: 4007
      TOOHIGH:
        value: 4006
    unit_test: false
    json: false
    use_map: false
    identifier: false
    underlying: uint16_t
  ROSC_CTRL_ENABLE:
    enum:
      DISABLE:
        value: 3358
      ENABLE:
        value: 4011
    unit_test: false
    json: false
    use_map: false
    identifier: false
    underlying: uint16_t
  ROSC_FREQA_PASSWD:
    enum:
      PASS:
        value: 38550
    unit_test: false
    json: false
    use_map: false
    identifier: false
    underlying: uint16_t
  ROSC_FREQB_PASSWD:
    enum:
      PASS:
        value: 38550
    unit_test: false
    json: false
    use_map: false
    identifier: false
    underlying: uint16_t
  ROSC_DIV_DIV:
    enum:
      PASS:
        value: 2720
    unit_test: false
    json: false
    use_map: false
    identifier: false
    underlying: uint16_t
